Overall

-코드정리

o코드를 보기 편하게 클래스별로 헤더와 cpp파일로 분리했다.
각각의 파일은 클래스 하나를 담당하고, virtualLego.cpp는 메인함수와 이벤트 핸들링, 프레임 업데이트와 지역변수만 남겼다.

ㅇ구에 들어가는 폴리곤 수가 너무 적은 것을 대폭 줄였다.

-CSphere
 ㅇ추가한 속성
    ㅇ int id, turncheck
      차례 검출때 사용, id는 현재 턴인 공에 맞았는지 여부. turncheck는 현재 이 공의 턴인지 체크하는 용도.

 ㅇ구체간의 충돌 검출
    ㅇ구의 반지름의 합^2 < 구의 중심끼리의 거리^2 계산식 사용.

 ㅇ구체간의 충돌 처리
    ㅇ충돌했을 경우 서로 접하는 위치로 이동시킨다.
    ㅇ각각의 속도를 구체 중심끼리 이은 벡터 방향과 그에 수직인 방향으로 나눈다.
    ㅇ완전탄성충돌이므로 구체 중심끼리 이은 방향의 벡터를 서로 바꾼다.

-CWall
 ㅇ구체와의 충돌 검출
    ㅇ벽을 구체의 반지름만큼 늘린 사각형에 구가 들어오는지 체크한다.
    ㅇ꼭지점 부분에서는 부정확하지만 지금 주어진 상황에서는 모든 벽면이 꼭지점끼리 맞닿아있으므로 알맞다.

 ㅇ구체와의 충돌 처리
    ㅇ구와 벽이 겹쳐있을 경우 구를 벽과 접할 때까지 뒤로 물린다.
    ㅇ직사각형에 속하는 점들중 구의 중심과 가장 가까운 점P를 찾는다.
    ㅇ구의 속력을 벽에 수직인 방향과 벽과 수평한 방향으로 나눈다.
      - 벽에 수직인 방향으로의 속도는 구의 중심에서 P로 향하는 단위벡터와 내적해서 구할 수 있다.

-CLight
 ㅇ시점을 움직일 때 조명도 같이 움직이도록 바꾸었다.

-CStick
 ㅇ당구채를 추가했다.
    ㅇD3DXCreateCylinder()함수를 사용했다.
    ㅇ당구채의 중심 위치, 가리키는 방향, 현재 당구채를 그려야 하는지 여부를 속성으로 갖는다.

-턴 감지
  ㅇ누구의 턴인지, 어떤 공이 맞았는지를 이용해 각각 경우를 나누어 판단했다.

-CScoreBoard
 ㅇ점수판을 추가했다.
    ㅇD3DXCreateFont(), DrawText()함수를 이용해 매 프레임 글자를 적어넣는 형태로 구현했다.
    ㅇint score[2] 속성을 갖는다.

-시연